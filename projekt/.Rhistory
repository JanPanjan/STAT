setwd("~/progAAAAAAA/STAT/projekt")
#| output: false
library(tidyr)
library(purrr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(corrplot)
install.packages("corrplot")
install.packages("Rtools")
#| output: false
library(tidyr)
library(purrr)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(corrplot)
df <- "winequality-red.csv" |>
read.csv(sep = ";") |>
as_tibble()
#| cache: true
#| code-fold: true
#| code-summary: manjkajoče vrednosti
map_df(df, \(col){
is.na(col) |>
grep(pattern = "TRUE") |>
length()
}) |>
pivot_longer(cols = everything(df)) %>% {
names(.) <- c("spremenljivka", "NA")
.
}
#| cache: true
#| code-fold: true
#| code-summary: naključni vzorec velikosti 5
df |> slice_sample(n = 5) |> knitr::kable()
#| cache: true
#| code-fold: true
#| code-summary: povzetek podatkov
sapply(df[names(df)], summary) |> knitr::kable()
#| code-fold: true
#| code-summary: quality_histogram
quality_histogram <- function(df, col) {
if (!("quality" %in% names(df))) {
message("couldn't find 'quality' column in df data frame.")
return(NA)
}
n <- nrow(df)
bins_ocena <- floor(1 + log2(n))
quality_factor <- factor(unlist(select(df, quality)))
unpacked <- unlist(select(df, all_of(col)))
col_name = gsub(pattern = "\\.", replacement = " ", x = col)
ggplot(df, aes(x = unpacked, fill = quality_factor)) +
geom_histogram(bins = bins_ocena) +
labs(
title = paste("Porazdelitev", col_name, "glede na oceno"),
x = col_name,
y = "frekvenca",
fill = "ocena"
) +
scale_fill_brewer(palette = "RdPu") +
theme_classic()
}
#| code-fold: true
#| code-summary: graf
ggplot(df, aes(quality)) +
geom_bar() +
labs(
title = "Porazdelitev ocen",
x = "ocena",
y = "frekvenca"
) +
scale_x_continuous(breaks = seq(3, 8, 1)) +
theme_classic()
#| code-fold: true
#| code-summary: graf
quality_histogram(df, "fixed.acidity")
#| code-fold: true
#| code-summary: graf
quality_histogram(df, "residual.sugar")
#| code-fold: true
#| code-summary: graf
quality_histogram(df, "total.sulfur.dioxide")
filter(df, total.sulfur.dioxide > 160) |> nrow()
#| code-fold: true
#| code-summary: asim_summary
asim_summary <- function(df, col) {
selected <- select(df, all_of(col))
unpacked <- unlist(selected)
selected |> summarise(
"1. kvartil" = quantile(unpacked, 0.25),
"mediana" = median(unpacked),
"3. kvartil" = quantile(unpacked, 0.75),
"standardni odklon" = sd(unpacked),
) |>
knitr::kable()
}
#| code-fold: true
#| code-summary: my_boxplot
my_boxplot <- function(df, col) {
selected <- select(df, all_of(col))
unpacked <- unlist(selected)
col_name = gsub(pattern = "\\.", replacement = " ", x = col)
plot <- ggplot(selected, aes(x = unpacked)) +
geom_boxplot() +
labs(
title = paste("Škatla z brki za spremenljivko", col_name),
y = col_name,
x = ""
) +
theme_classic()
return(plot)
}
#| code-fold: true
#| code-summary: kvartili in standardni kislosti vina
asim_summary(df, "fixed.acidity")
#| code-fold: true
#| code-summary: povzetek podatkov kislosti vina glede na ocene
select(df, quality, fixed.acidity) |>
group_by(quality) |>
summarise(
"1. kvartil" = quantile(fixed.acidity, 0.25),
"mediana" = median(fixed.acidity),
"3. kvartil" = quantile(fixed.acidity, 0.75),
"IQR" = IQR(fixed.acidity)
) |>
rename(ocena = quality) |>
knitr::kable()
factor(df$quality) |> summary()
#| code-fold: true
#| code-summary: kvartili in standardni odklon vsebnosti sladkorja
asim_summary(df, "residual.sugar")
#| code-fold: true
#| code-summary: povzetek podatkov vsebnosti sladkorja v vinu glede na ocene
select(df, quality, residual.sugar) |>
group_by(quality) |>
summarise(
"1. kvartil" = quantile(residual.sugar, 0.25),
"mediana" = median(residual.sugar),
"3. kvartil" = quantile(residual.sugar, 0.75),
"IQR" = IQR(residual.sugar)
) |>
rename(ocena = quality) |>
knitr::kable()
#| code-fold: true
#| code-summary: kvartili in standardni odklon celotne vsebnosti žveplovega dioksida
asim_summary(df, "total.sulfur.dioxide")
#| code-fold: true
#| code-summary: povzetek podatkov celotne vsebnosti žveplovega dioksida v vinu glede na ocene
select(df, quality, total.sulfur.dioxide) |>
group_by(quality) |>
summarise(
"1. kvartil" = quantile(total.sulfur.dioxide, 0.25),
"mediana" = median(total.sulfur.dioxide),
"3. kvartil" = quantile(total.sulfur.dioxide, 0.75),
"IQR" = IQR(total.sulfur.dioxide)
) |>
rename(ocena = quality) |>
knitr::kable()
#| cache: true
#| column: page
#| code-fold: true
#| code-summary: škatle z brki
p1 <- my_boxplot(df, "fixed.acidity")
p2 <- my_boxplot(df, "residual.sugar")
p3 <- my_boxplot(df, "total.sulfur.dioxide")
grid.arrange(p1, p2, p3, nrow = 3)
#| code-fold: true
#| code-summary: test
wilcox.test(
fixed.acidity ~ quality,
data = df,
subset = quality %in% c(5, 6),
alternative = "greater"
)
#| code-fold: true
#| code-summary: test
wilcox.test(
x = df$residual.sugar,
alternative = "greater",
mu = 2.3
)
wilcox.test(
x = df$residual.sugar,
alternative = "greater",
mu = 2.2
)
wilcox.test(
x = df$residual.sugar,
alternative = "greater",
mu = 2.1
)
#| code-fold: true
#| code-summary: qq_plot
qq_plot <- function(df, col) {
selected <- select(df, !!sym(col))
unpacked <- unlist(selected)
clr1 <- "#f278b3"
clr2 <- "darkslateblue"
n <- nrow(df)
bins_ocena <- floor(1 + log2(n))
qqplot <- selected |>
ggplot(aes(sample = unpacked)) +
stat_qq(colour = clr1) +
stat_qq_line(colour = clr2, linewidth = 1) +
labs(
title = paste("Q-Q plot za", col),
x = "kvantili normalne porazdelitve",
y = "kvantili spremenljivke"
) +
theme_classic()
histplot <- selected |>
ggplot(aes(x = unpacked, y = after_stat(density))) +
geom_histogram(bins = bins_ocena, fill = clr1) +
geom_density(color = clr2, linewidth = 1) +
labs(
title = paste("Histogram spremenljivke", col),
x = col,
y = "frekvenca",
) +
theme_classic()
return(
list("qqplot" = qqplot, "histplot" = histplot)
)
}
#| cache: true
#| code-fold: true
#| code-summary: Q-Q plots za spremenljivke z repnim odstopanjem
col_names <- c(
"alcohol", "chlorides", "citric.acid",
"density", "pH", "residual.sugar"
)
qq_plots_tails <- map(col_names, qq_plot, df = df)
for (plots in qq_plots_tails) {
grid.arrange(grobs = plots, ncol = 2)
}
#| cache: true
#| code-fold: true
#| code-summary: Q-Q plots za spremenljivke z *ukrivljeno* porazdelitvijo
col_names <- c(
"fixed.acidity", "free.sulfur.dioxide", "sulphates",
"total.sulfur.dioxide", "volatile.acidity"
)
qq_plots_curved <- map(col_names, qq_plot, df = df)
for (plots in qq_plots_curved) {
grid.arrange(grobs = plots, ncol = 2)
}
#| cache: true
#| code-fold: true
#| code-summary: Q-Q plots za spremenljivko quality
qq_plot_quality <- qq_plot(df, "quality")
grid.arrange(grobs = qq_plot_quality, ncol = 2)
cor(df$pH, df$residual.sugar)
quality_factor <- factor(unlist(select(df, quality)))
select(df, quality, pH, residual.sugar) |>
ggplot(aes(pH, residual.sugar, colour = quality_factor)) +
geom_point() +
scale_color_brewer(palette = "RdPu") +
theme_bw()
``` zelo malo odstopa od 0, kar nakazuje na odsotnost korelacije.
corrplot(cor(df), method = "color")
#| code-fold: true
#| code-summary: scatter plot
quality_factor <- factor(unlist(select(df, quality)))
select(df, quality, pH, residual.sugar) |>
ggplot(aes(pH, residual.sugar, colour = quality_factor)) +
geom_point() +
scale_color_brewer(palette = "RdPu") +
theme_bw()
cor(df$alcohol, df$quality)
cor.test(
x = df$alcohol,
y = df$quality,
alternative = "greater",
method = "pearson"
)
select(df, quality, alcohol) |>
ggplot(aes(x = alcohol, y = quality, colour = "PuRd")) +
```
select(df, quality, alcohol) |>
ggplot(aes(x = alcohol, y = quality, colour = "PuRd")) +
geom_point()
select(df, quality, alcohol) |>
ggplot(aes(x = quality, y = alcohol, colour = "PuRd")) +
geom_point()
select(df, quality, alcohol) |>
ggplot(aes(x = quality, y = alcohol, colour = "PuRd")) +
geom_line()
